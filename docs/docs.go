// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/demo/test": {
            "get": {
                "description": "获取所有数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "获取所有数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "自定义查询语句, 使用 RSQL 语法",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "分页条数",
                        "name": "pagelimit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "分页偏移量",
                        "name": "pageoffset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "关键字模糊查询",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排序, 支持desc和asc, 如 id desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "新增数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "新增数据",
                "parameters": [
                    {
                        "description": "demo",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/srvdemo.AddParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/demo/test/message": {
            "post": {
                "description": "发送消息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "发送消息",
                "parameters": [
                    {
                        "description": "demo",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/srvdemo.AddParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/demo/test/{ids}": {
            "delete": {
                "description": "删除数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "删除数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ids",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/demo/test/{id}": {
            "get": {
                "description": "获取详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "获取指定ID详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data_set": {
                                            "$ref": "#/definitions/models.Demo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "更新数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "更新数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "IDC detail",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/srvdemo.AddParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Response": {
            "type": "object",
            "properties": {
                "data_set": {},
                "message": {
                    "type": "string"
                },
                "ret_code": {
                    "$ref": "#/definitions/common.RetCode"
                }
            }
        },
        "common.RetCode": {
            "type": "integer",
            "enum": [
                0,
                4030,
                5002,
                5003,
                5004,
                5005,
                5006,
                5007,
                5008,
                5009,
                5010
            ],
            "x-enum-varnames": [
                "SUCCESS",
                "FORBIDDEN",
                "FAILED",
                "ErrorDatabaseRead",
                "ErrorDatabaseWrite",
                "ErrorDatabaseNotFound",
                "ErrInvalidParams",
                "ErrInvalidJSONParams",
                "ErrorPrivilege",
                "ErrorResourceNotExist",
                "ErrorCallOtherSrv"
            ]
        },
        "models.Demo": {
            "type": "object",
            "properties": {
                "created_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_time": {
                    "description": "更新时间",
                    "type": "string"
                },
                "user_name": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "srvdemo.AddParams": {
            "type": "object",
            "required": [
                "user_name"
            ],
            "properties": {
                "user_name": {
                    "description": "名字",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1/",
	Schemes:          []string{},
	Title:            "Demo app",
	Description:      "gin demo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
